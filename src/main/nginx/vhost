server {
	listen 80;
	server_name robin.algorythm.de;
	root        /var/www/robin/web;

	return 301 https://$server_name$request_uri;
}

server {
	set $root_dir /var/www/robin/web; 
	listen        443 ssl;
	server_name   robin.algorythm.de;
	root          $root_dir;
	access_log    /var/log/nginx/robin_access.log;
	error_log     /var/log/nginx/robin_error.log debug;

	ssl_certificate     /etc/ssl/certs/robin.algorythm.de.crt;
	ssl_certificate_key /etc/ssl/private/robin.algorythm.de.key;

	auth_basic           "Robin's files";
	auth_basic_user_file $root_dir/../.htpasswd;

	client_body_buffer_size 128K;
	dav_ext_methods         OPTIONS PROPFIND; # At least OPTION required since MS-WebDAV-MiniRedir requests first: OPTIONS /
	dav_access              group:rw all:r;

	location / {
		alias $root_dir/ui/;
		# when javascript login
		#auth_basic off;
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	location ~ '^/files(/.*|$)' {
		autoindex on;
#		client_body_temp_path   /var/nginx-client-body; # directory to store body temporarily
		client_body_buffer_size 128K;
		client_max_body_size    2000M;
		client_body_timeout     1200s;
		dav_methods             PUT DELETE MKCOL COPY MOVE;
		dav_ext_methods         OPTIONS PROPFIND;
		dav_access              group:rw all:r;
		create_full_put_path    on;
	}

	location ~ '^/image/(.*?)-(\d+)x(\d+)(\.[^\.]+)$' {
		set $image     $1;
		set $width     $2;
		set $height    $3;
		set $extension $4;

		alias $root_dir/files/$image$extension;
		image_filter_buffer       5m;
		image_filter_jpeg_quality 75;
		image_filter_transparency off;
		image_filter resize       $width $height;
#		image_filter crop         100 100;
	}

	location ~ '^/video/(.*?)\.(mp4|m4v|m4a)$' {
		alias $root_dir/files/$1.$2;
		mp4;
		mp4_buffer_size       1m;
		mp4_max_buffer_size   5m;
		client_max_body_size  80m;
	}

	location ~ '^/video/(.*?)\.flv$' {
		alias $root_dir/files/$1.flv;
		flv;
		client_max_body_size  80m;
	}
}
